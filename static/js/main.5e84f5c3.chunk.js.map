{"version":3,"sources":["SeasonDisplay.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMesage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAa,CACfC,OAAO,CACHC,KAAK,uBACLC,SAAS,OAEbC,OAAO,CACHF,KAAK,mBACLC,SAAS,WA2BFE,EAfO,SAACC,GAElB,IAVcC,EAAIC,EAUZC,GAVQF,EAUWD,EAAMC,KAVbC,GAUiB,IAAIE,MAAOC,YATtC,GAAKH,EAAM,EACVD,EAAM,EAAI,SAAW,SAEpBA,EAAM,EAAI,SAAW,UAIH,EAGLP,EAAaS,GAA9BP,EAHsB,EAGtBA,KAAKC,EAHiB,EAGjBA,SAGZ,OACA,sBAAKS,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,mCAAMD,KACN,mBAAGU,UAAS,6BAAwBT,EAAxB,eC7BZU,EAAU,SAACP,GAEb,OACI,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKN,EAAMQ,aAQvBD,EAAQE,aAAa,CACjBD,QAAQ,eAIGD,QChBTG,E,4MAGFC,MAAM,CAAEV,IAAK,KAAKW,YAAY,I,uDAE7B,WAAoB,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBAAmB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAIgB,EAASE,OAAOC,cAClG,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,YAAYS,EAAIb,e,oBAKxC,WACI,OAAIc,KAAKX,MAAMC,aAAeU,KAAKX,MAAMV,IAC9B,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGvCqB,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAC9B,4CAAeqB,KAAKX,MAAMC,eAG9B,8BACH,cAAC,EAAD,CAASJ,QAAQ,6C,GAtBXe,IAAMC,WA4BxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,Y","file":"static/js/main.5e84f5c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst seasonConfig={\r\n    summer:{\r\n        text:\"Let's hit the beach!\",\r\n        iconName:'sun'\r\n    },\r\n    winter:{\r\n        text:\"Burr,it is cold!\",\r\n        iconName:'winter'\r\n    }\r\n}\r\n\r\nconst getSeason = (lat,month) => {\r\n    if(month>2 && month<9){\r\n       return lat > 0 ? 'summer' : 'winter';\r\n    }else{\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n   \r\n     const season = getSeason(props.lat,new Date().getMonth());\r\n    const {text,iconName} = seasonConfig[season];\r\n    \r\n \r\n    return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1> {text}</h1> \r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n);\r\n};\r\n\r\nexport default SeasonDisplay;","import Reacf from 'react';\r\n\r\n\r\nconst Spinner = (props) => {\r\n\r\n    return(\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nSpinner.defaultProps={\r\n    message:\"Loading....\"\r\n}\r\n\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './spinner';\r\n\r\nclass App extends React.Component{\r\n\r\n    //Intializing state\r\n    state={ lat: null,errorMesage:''}; \r\n    \r\n     componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(position => this.setState({ lat:position.coords.latitude}),\r\n      err => this.setState({errorMesage:err.message})\r\n      );\r\n     }\r\n    //must method for react\r\n\r\n    render() {\r\n        if(!this.state.errorMesage && this.state.lat){\r\n            return <SeasonDisplay lat={this.state.lat} />;\r\n        }\r\n\r\n        if(this.state.errorMesage && !this.state.lat){\r\n            return <div>Latitude:{this.state.errorMesage}</div>;\r\n        }\r\n\r\n        return <div>\r\n            <Spinner message=\"Please accept the Location Request\"/>\r\n            </div>\r\n\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />,document.querySelector(\"#root\"));"],"sourceRoot":""}